
UART_BCM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000730  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000730  000007c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000039  00800066  00800066  000007ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000144e  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a45  00000000  00000000  00001d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac4  00000000  00000000  000027e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002fc  00000000  00000000  000032a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ed  00000000  00000000  000035a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000838  00000000  00000000  00003d91  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000045c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <__vector_12>
  34:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__vector_13>
  38:	0c 94 3b 03 	jmp	0x676	; 0x676 <__vector_14>
  3c:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 39       	cpi	r26, 0x9F	; 159
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ca 01 	call	0x394	; 0x394 <main>
  8a:	0c 94 96 03 	jmp	0x72c	; 0x72c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <TX_SetFlag>:
			}
	}
					
	}
	return gu8_FSM_Status;
}
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <gu8_TXC_Flag>
  98:	08 95       	ret

0000009a <RX_SetFlag>:
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <gu8_RXC_Flag>
  a0:	08 95       	ret

000000a2 <BCM_Init>:
  a2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <BCM_Config>
  a6:	88 23       	and	r24, r24
  a8:	21 f0       	breq	.+8      	; 0xb2 <BCM_Init+0x10>
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	09 f4       	brne	.+2      	; 0xb0 <BCM_Init+0xe>
  ae:	40 c0       	rjmp	.+128    	; 0x130 <BCM_Init+0x8e>
  b0:	6a c0       	rjmp	.+212    	; 0x186 <BCM_Init+0xe4>
  b2:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BCM_Config+0x1>
  b6:	82 30       	cpi	r24, 0x02	; 2
  b8:	19 f0       	breq	.+6      	; 0xc0 <BCM_Init+0x1e>
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	e9 f0       	breq	.+58     	; 0xf8 <BCM_Init+0x56>
  be:	65 c0       	rjmp	.+202    	; 0x18a <BCM_Init+0xe8>
  c0:	e7 e8       	ldi	r30, 0x87	; 135
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	10 82       	st	Z, r1
  c6:	11 82       	std	Z+1, r1	; 0x01
  c8:	80 e4       	ldi	r24, 0x40	; 64
  ca:	82 83       	std	Z+2, r24	; 0x02
  cc:	13 82       	std	Z+3, r1	; 0x03
  ce:	14 82       	std	Z+4, r1	; 0x04
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	85 83       	std	Z+5, r24	; 0x05
  d4:	16 82       	std	Z+6, r1	; 0x06
  d6:	17 82       	std	Z+7, r1	; 0x07
  d8:	10 86       	std	Z+8, r1	; 0x08
  da:	83 e0       	ldi	r24, 0x03	; 3
  dc:	81 87       	std	Z+9, r24	; 0x09
  de:	13 86       	std	Z+11, r1	; 0x0b
  e0:	12 86       	std	Z+10, r1	; 0x0a
  e2:	89 e4       	ldi	r24, 0x49	; 73
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	95 87       	std	Z+13, r25	; 0x0d
  e8:	84 87       	std	Z+12, r24	; 0x0c
  ea:	17 86       	std	Z+15, r1	; 0x0f
  ec:	16 86       	std	Z+14, r1	; 0x0e
  ee:	cf 01       	movw	r24, r30
  f0:	0e 94 a2 02 	call	0x544	; 0x544 <USART_Init>
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	08 95       	ret
  f8:	e7 e8       	ldi	r30, 0x87	; 135
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	10 82       	st	Z, r1
  fe:	80 e8       	ldi	r24, 0x80	; 128
 100:	81 83       	std	Z+1, r24	; 0x01
 102:	12 82       	std	Z+2, r1	; 0x02
 104:	13 82       	std	Z+3, r1	; 0x03
 106:	80 e1       	ldi	r24, 0x10	; 16
 108:	84 83       	std	Z+4, r24	; 0x04
 10a:	15 82       	std	Z+5, r1	; 0x05
 10c:	16 82       	std	Z+6, r1	; 0x06
 10e:	17 82       	std	Z+7, r1	; 0x07
 110:	10 86       	std	Z+8, r1	; 0x08
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	81 87       	std	Z+9, r24	; 0x09
 116:	13 86       	std	Z+11, r1	; 0x0b
 118:	12 86       	std	Z+10, r1	; 0x0a
 11a:	15 86       	std	Z+13, r1	; 0x0d
 11c:	14 86       	std	Z+12, r1	; 0x0c
 11e:	8d e4       	ldi	r24, 0x4D	; 77
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	97 87       	std	Z+15, r25	; 0x0f
 124:	86 87       	std	Z+14, r24	; 0x0e
 126:	cf 01       	movw	r24, r30
 128:	0e 94 a2 02 	call	0x544	; 0x544 <USART_Init>
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	08 95       	ret
 130:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BCM_Config+0x1>
 134:	82 30       	cpi	r24, 0x02	; 2
 136:	19 f0       	breq	.+6      	; 0x13e <BCM_Init+0x9c>
 138:	83 30       	cpi	r24, 0x03	; 3
 13a:	99 f0       	breq	.+38     	; 0x162 <BCM_Init+0xc0>
 13c:	28 c0       	rjmp	.+80     	; 0x18e <BCM_Init+0xec>
 13e:	e7 e9       	ldi	r30, 0x97	; 151
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 83       	st	Z, r24
 146:	81 83       	std	Z+1, r24	; 0x01
 148:	12 82       	std	Z+2, r1	; 0x02
 14a:	13 82       	std	Z+3, r1	; 0x03
 14c:	84 83       	std	Z+4, r24	; 0x04
 14e:	15 82       	std	Z+5, r1	; 0x05
 150:	89 e4       	ldi	r24, 0x49	; 73
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	97 83       	std	Z+7, r25	; 0x07
 156:	86 83       	std	Z+6, r24	; 0x06
 158:	cf 01       	movw	r24, r30
 15a:	0e 94 02 02 	call	0x404	; 0x404 <SPI_Init>
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	08 95       	ret
 162:	e7 e9       	ldi	r30, 0x97	; 151
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	10 82       	st	Z, r1
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	81 83       	std	Z+1, r24	; 0x01
 16c:	12 82       	std	Z+2, r1	; 0x02
 16e:	13 82       	std	Z+3, r1	; 0x03
 170:	84 83       	std	Z+4, r24	; 0x04
 172:	15 82       	std	Z+5, r1	; 0x05
 174:	8d e4       	ldi	r24, 0x4D	; 77
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	97 83       	std	Z+7, r25	; 0x07
 17a:	86 83       	std	Z+6, r24	; 0x06
 17c:	cf 01       	movw	r24, r30
 17e:	0e 94 02 02 	call	0x404	; 0x404 <SPI_Init>
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	08 95       	ret
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	08 95       	ret
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	08 95       	ret
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	08 95       	ret

00000192 <BCM_TxDispatch>:
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	c0 91 6c 00 	lds	r28, 0x006C	; 0x80006c <gu16_NumberOfBytes>
 19a:	d0 91 6d 00 	lds	r29, 0x006D	; 0x80006d <gu16_NumberOfBytes+0x1>
 19e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <BCM_Config>
 1a2:	88 23       	and	r24, r24
 1a4:	21 f0       	breq	.+8      	; 0x1ae <BCM_TxDispatch+0x1c>
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	09 f4       	brne	.+2      	; 0x1ac <BCM_TxDispatch+0x1a>
 1aa:	6b c0       	rjmp	.+214    	; 0x282 <BCM_TxDispatch+0xf0>
 1ac:	dc c0       	rjmp	.+440    	; 0x366 <BCM_TxDispatch+0x1d4>
 1ae:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BCM_Config+0x1>
 1b2:	82 30       	cpi	r24, 0x02	; 2
 1b4:	09 f0       	breq	.+2      	; 0x1b8 <BCM_TxDispatch+0x26>
 1b6:	65 c0       	rjmp	.+202    	; 0x282 <BCM_TxDispatch+0xf0>
 1b8:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <gu8_TXC_Flag>
 1bc:	88 23       	and	r24, r24
 1be:	09 f4       	brne	.+2      	; 0x1c2 <BCM_TxDispatch+0x30>
 1c0:	67 c0       	rjmp	.+206    	; 0x290 <BCM_TxDispatch+0xfe>
 1c2:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <gu8_TXC_Flag>
 1c6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <BCM_TxDispatch+0x3e>
 1ce:	52 c0       	rjmp	.+164    	; 0x274 <BCM_TxDispatch+0xe2>
 1d0:	8f 3f       	cpi	r24, 0xFF	; 255
 1d2:	21 f0       	breq	.+8      	; 0x1dc <BCM_TxDispatch+0x4a>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	09 f0       	breq	.+2      	; 0x1da <BCM_TxDispatch+0x48>
 1d8:	54 c0       	rjmp	.+168    	; 0x282 <BCM_TxDispatch+0xf0>
 1da:	1f c0       	rjmp	.+62     	; 0x21a <BCM_TxDispatch+0x88>
 1dc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 1e0:	81 30       	cpi	r24, 0x01	; 1
 1e2:	59 f0       	breq	.+22     	; 0x1fa <BCM_TxDispatch+0x68>
 1e4:	18 f0       	brcs	.+6      	; 0x1ec <BCM_TxDispatch+0x5a>
 1e6:	82 30       	cpi	r24, 0x02	; 2
 1e8:	79 f0       	breq	.+30     	; 0x208 <BCM_TxDispatch+0x76>
 1ea:	4b c0       	rjmp	.+150    	; 0x282 <BCM_TxDispatch+0xf0>
 1ec:	81 e3       	ldi	r24, 0x31	; 49
 1ee:	0e 94 d5 02 	call	0x5aa	; 0x5aa <USART_SendChar>
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 1f8:	44 c0       	rjmp	.+136    	; 0x282 <BCM_TxDispatch+0xf0>
 1fa:	8d 2f       	mov	r24, r29
 1fc:	0e 94 d5 02 	call	0x5aa	; 0x5aa <USART_SendChar>
 200:	82 e0       	ldi	r24, 0x02	; 2
 202:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 206:	3d c0       	rjmp	.+122    	; 0x282 <BCM_TxDispatch+0xf0>
 208:	8c 2f       	mov	r24, r28
 20a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <USART_SendChar>
 20e:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 218:	34 c0       	rjmp	.+104    	; 0x282 <BCM_TxDispatch+0xf0>
 21a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <u16_DataBufferIndex.1676>
 21e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 222:	8c 17       	cp	r24, r28
 224:	9d 07       	cpc	r25, r29
 226:	10 f5       	brcc	.+68     	; 0x26c <BCM_TxDispatch+0xda>
 228:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <gpu8_PointerToBuffer>
 22c:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <gpu8_PointerToBuffer+0x1>
 230:	f9 01       	movw	r30, r18
 232:	e8 0f       	add	r30, r24
 234:	f9 1f       	adc	r31, r25
 236:	80 81       	ld	r24, Z
 238:	88 23       	and	r24, r24
 23a:	c1 f0       	breq	.+48     	; 0x26c <BCM_TxDispatch+0xda>
 23c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <USART_SendChar>
 240:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <u16_DataBufferIndex.1676>
 244:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 248:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <gpu8_PointerToBuffer>
 24c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <gpu8_PointerToBuffer+0x1>
 250:	e8 0f       	add	r30, r24
 252:	f9 1f       	adc	r31, r25
 254:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <__data_end>
 258:	20 81       	ld	r18, Z
 25a:	23 0f       	add	r18, r19
 25c:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <__data_end>
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 266:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <u16_DataBufferIndex.1676>
 26a:	0b c0       	rjmp	.+22     	; 0x282 <BCM_TxDispatch+0xf0>
 26c:	83 e0       	ldi	r24, 0x03	; 3
 26e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 272:	0e c0       	rjmp	.+28     	; 0x290 <BCM_TxDispatch+0xfe>
 274:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 278:	0e 94 d5 02 	call	0x5aa	; 0x5aa <USART_SendChar>
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 282:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BCM_Config+0x1>
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	19 f0       	breq	.+6      	; 0x290 <BCM_TxDispatch+0xfe>
 28a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 28e:	6b c0       	rjmp	.+214    	; 0x366 <BCM_TxDispatch+0x1d4>
 290:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <gu8_TXC_Flag>
 294:	88 23       	and	r24, r24
 296:	09 f4       	brne	.+2      	; 0x29a <BCM_TxDispatch+0x108>
 298:	66 c0       	rjmp	.+204    	; 0x366 <BCM_TxDispatch+0x1d4>
 29a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <gu8_TXC_Flag>
 29e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2a2:	82 30       	cpi	r24, 0x02	; 2
 2a4:	29 f1       	breq	.+74     	; 0x2f0 <BCM_TxDispatch+0x15e>
 2a6:	83 30       	cpi	r24, 0x03	; 3
 2a8:	09 f4       	brne	.+2      	; 0x2ac <BCM_TxDispatch+0x11a>
 2aa:	56 c0       	rjmp	.+172    	; 0x358 <BCM_TxDispatch+0x1c6>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <BCM_TxDispatch+0x120>
 2b0:	5a c0       	rjmp	.+180    	; 0x366 <BCM_TxDispatch+0x1d4>
 2b2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	59 f0       	breq	.+22     	; 0x2d0 <BCM_TxDispatch+0x13e>
 2ba:	18 f0       	brcs	.+6      	; 0x2c2 <BCM_TxDispatch+0x130>
 2bc:	82 30       	cpi	r24, 0x02	; 2
 2be:	79 f0       	breq	.+30     	; 0x2de <BCM_TxDispatch+0x14c>
 2c0:	52 c0       	rjmp	.+164    	; 0x366 <BCM_TxDispatch+0x1d4>
 2c2:	81 e3       	ldi	r24, 0x31	; 49
 2c4:	0e 94 4f 02 	call	0x49e	; 0x49e <SPI_SendChar>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 2ce:	4b c0       	rjmp	.+150    	; 0x366 <BCM_TxDispatch+0x1d4>
 2d0:	8d 2f       	mov	r24, r29
 2d2:	0e 94 4f 02 	call	0x49e	; 0x49e <SPI_SendChar>
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 2dc:	44 c0       	rjmp	.+136    	; 0x366 <BCM_TxDispatch+0x1d4>
 2de:	8c 2f       	mov	r24, r28
 2e0:	0e 94 4f 02 	call	0x49e	; 0x49e <SPI_SendChar>
 2e4:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <u8_DispatchEnteranceCounter.1678>
 2e8:	82 e0       	ldi	r24, 0x02	; 2
 2ea:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 2ee:	3b c0       	rjmp	.+118    	; 0x366 <BCM_TxDispatch+0x1d4>
 2f0:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <u16_DataBufferIndex.1676>
 2f4:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 2f8:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <gu16_NumberOfBytes>
 2fc:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <gu16_NumberOfBytes+0x1>
 300:	82 17       	cp	r24, r18
 302:	93 07       	cpc	r25, r19
 304:	10 f5       	brcc	.+68     	; 0x34a <BCM_TxDispatch+0x1b8>
 306:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <gpu8_PointerToBuffer>
 30a:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <gpu8_PointerToBuffer+0x1>
 30e:	f9 01       	movw	r30, r18
 310:	e8 0f       	add	r30, r24
 312:	f9 1f       	adc	r31, r25
 314:	80 81       	ld	r24, Z
 316:	88 23       	and	r24, r24
 318:	c1 f0       	breq	.+48     	; 0x34a <BCM_TxDispatch+0x1b8>
 31a:	0e 94 4f 02 	call	0x49e	; 0x49e <SPI_SendChar>
 31e:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <u16_DataBufferIndex.1676>
 322:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 326:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <gpu8_PointerToBuffer>
 32a:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <gpu8_PointerToBuffer+0x1>
 32e:	e8 0f       	add	r30, r24
 330:	f9 1f       	adc	r31, r25
 332:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <__data_end>
 336:	20 81       	ld	r18, Z
 338:	23 0f       	add	r18, r19
 33a:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <__data_end>
 33e:	01 96       	adiw	r24, 0x01	; 1
 340:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <u16_DataBufferIndex.1676+0x1>
 344:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <u16_DataBufferIndex.1676>
 348:	0e c0       	rjmp	.+28     	; 0x366 <BCM_TxDispatch+0x1d4>
 34a:	83 e0       	ldi	r24, 0x03	; 3
 34c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <gu8_TXC_Flag>
 356:	07 c0       	rjmp	.+14     	; 0x366 <BCM_TxDispatch+0x1d4>
 358:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 35c:	0e 94 4f 02 	call	0x49e	; 0x49e <SPI_SendChar>
 360:	8f ef       	ldi	r24, 0xFF	; 255
 362:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 366:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 36a:	df 91       	pop	r29
 36c:	cf 91       	pop	r28
 36e:	08 95       	ret

00000370 <BCM_Send>:

ERROR_STATUS BCM_Send (uint8_t* pu8_Data , uint16_t u16_NumberOfBytes)
{
 370:	9c 01       	movw	r18, r24
	ERROR_STATUS ERR = E_OK;
	
 	if (gu8_FSM_Status == IDLE)
 372:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 376:	9f 3f       	cpi	r25, 0xFF	; 255
 378:	59 f4       	brne	.+22     	; 0x390 <BCM_Send+0x20>
	 {
		 gu8_FSM_Status = START_SENDING;
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		 gpu8_PointerToBuffer = pu8_Data;
 380:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <gpu8_PointerToBuffer+0x1>
 384:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <gpu8_PointerToBuffer>
		 gu16_NumberOfBytes = u16_NumberOfBytes;
 388:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <gu16_NumberOfBytes+0x1>
 38c:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <gu16_NumberOfBytes>
	 }

	return ERR;
}
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	08 95       	ret

00000394 <main>:


uint8_t data[BUFFER_LENGTH] = {0};

int main (void)
{
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	cd b7       	in	r28, 0x3d	; 61
 39a:	de b7       	in	r29, 0x3e	; 62
 39c:	61 97       	sbiw	r28, 0x11	; 17
 39e:	0f b6       	in	r0, 0x3f	; 63
 3a0:	f8 94       	cli
 3a2:	de bf       	out	0x3e, r29	; 62
 3a4:	0f be       	out	0x3f, r0	; 63
 3a6:	cd bf       	out	0x3d, r28	; 61
/************************************/
/*					MASTER					*/
/************************************/

	uint8_t iteration = 0;
	uint8_t u8_current_data = 0;
 3a8:	19 82       	std	Y+1, r1	; 0x01

	strUSART_Config_t USART_Config = {
 3aa:	80 e1       	ldi	r24, 0x10	; 16
 3ac:	fe 01       	movw	r30, r28
 3ae:	32 96       	adiw	r30, 0x02	; 2
 3b0:	df 01       	movw	r26, r30
 3b2:	98 2f       	mov	r25, r24
 3b4:	1d 92       	st	X+, r1
 3b6:	9a 95       	dec	r25
 3b8:	e9 f7       	brne	.-6      	; 0x3b4 <main+0x20>
 3ba:	8e 83       	std	Y+6, r24	; 0x06
 3bc:	88 e0       	ldi	r24, 0x08	; 8
 3be:	8f 83       	std	Y+7, r24	; 0x07
 3c0:	83 e0       	ldi	r24, 0x03	; 3
 3c2:	8b 87       	std	Y+11, r24	; 0x0b
		USART_NO_PARITY,
		USART_1_STOP_BIT,
		USART_8_BIT_CHR
	};

	ENABLE_GINT;
 3c4:	9f b7       	in	r25, 0x3f	; 63
 3c6:	90 68       	ori	r25, 0x80	; 128
 3c8:	9f bf       	out	0x3f, r25	; 63
	USART_Init(&USART_Config);
 3ca:	cf 01       	movw	r24, r30
 3cc:	0e 94 a2 02 	call	0x544	; 0x544 <USART_Init>
	BCM_Init();
 3d0:	0e 94 51 00 	call	0xa2	; 0xa2 <BCM_Init>
 	BCM_Send (data , BUFFER_LENGTH);
 3d4:	6a e0       	ldi	r22, 0x0A	; 10
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	8f e6       	ldi	r24, 0x6F	; 111
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	0e 94 b8 01 	call	0x370	; 0x370 <BCM_Send>
{
/************************************/
/*					MASTER					*/
/************************************/

	uint8_t iteration = 0;
 3e0:	10 e0       	ldi	r17, 0x00	; 0
 	BCM_Send (data , BUFFER_LENGTH);
 	
	 
	while(1)
	{
		if (iteration<BUFFER_LENGTH)
 3e2:	1a 30       	cpi	r17, 0x0A	; 10
 3e4:	60 f4       	brcc	.+24     	; 0x3fe <main+0x6a>
		{
			
			USART_ReceiveChar(&u8_current_data);
 3e6:	ce 01       	movw	r24, r28
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	0e 94 fd 02 	call	0x5fa	; 0x5fa <USART_ReceiveChar>
			data[iteration] = u8_current_data;
 3ee:	e1 2f       	mov	r30, r17
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	e1 59       	subi	r30, 0x91	; 145
 3f4:	ff 4f       	sbci	r31, 0xFF	; 255
 3f6:	89 81       	ldd	r24, Y+1	; 0x01
 3f8:	80 83       	st	Z, r24
			
			iteration++;
 3fa:	1f 5f       	subi	r17, 0xFF	; 255
 3fc:	f2 cf       	rjmp	.-28     	; 0x3e2 <main+0x4e>
			
		}
		else
		{
			BCM_TxDispatch();
 3fe:	0e 94 c9 00 	call	0x192	; 0x192 <BCM_TxDispatch>
 402:	ef cf       	rjmp	.-34     	; 0x3e2 <main+0x4e>

00000404 <SPI_Init>:
		while (TRANSMISSION_NOT_COMPLETE);
		*pu8_Data = SPDR ;
	}
	return ERR;
	
}
 404:	fc 01       	movw	r30, r24
 406:	89 2b       	or	r24, r25
 408:	e9 f1       	breq	.+122    	; 0x484 <SPI_Init+0x80>
 40a:	80 81       	ld	r24, Z
 40c:	88 23       	and	r24, r24
 40e:	41 f0       	breq	.+16     	; 0x420 <SPI_Init+0x1c>
 410:	81 30       	cpi	r24, 0x01	; 1
 412:	51 f4       	brne	.+20     	; 0x428 <SPI_Init+0x24>
 414:	87 b3       	in	r24, 0x17	; 23
 416:	80 6b       	ori	r24, 0xB0	; 176
 418:	87 bb       	out	0x17, r24	; 23
 41a:	6c 9a       	sbi	0x0d, 4	; 13
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	05 c0       	rjmp	.+10     	; 0x42a <SPI_Init+0x26>
 420:	be 9a       	sbi	0x17, 6	; 23
 422:	6c 98       	cbi	0x0d, 4	; 13
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	01 c0       	rjmp	.+2      	; 0x42a <SPI_Init+0x26>
 428:	80 e0       	ldi	r24, 0x00	; 0
 42a:	91 81       	ldd	r25, Z+1	; 0x01
 42c:	99 23       	and	r25, r25
 42e:	21 f0       	breq	.+8      	; 0x438 <SPI_Init+0x34>
 430:	91 30       	cpi	r25, 0x01	; 1
 432:	21 f4       	brne	.+8      	; 0x43c <SPI_Init+0x38>
 434:	6f 9a       	sbi	0x0d, 7	; 13
 436:	03 c0       	rjmp	.+6      	; 0x43e <SPI_Init+0x3a>
 438:	6f 98       	cbi	0x0d, 7	; 13
 43a:	01 c0       	rjmp	.+2      	; 0x43e <SPI_Init+0x3a>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	92 81       	ldd	r25, Z+2	; 0x02
 440:	99 23       	and	r25, r25
 442:	21 f0       	breq	.+8      	; 0x44c <SPI_Init+0x48>
 444:	91 30       	cpi	r25, 0x01	; 1
 446:	21 f4       	brne	.+8      	; 0x450 <SPI_Init+0x4c>
 448:	6d 9a       	sbi	0x0d, 5	; 13
 44a:	03 c0       	rjmp	.+6      	; 0x452 <SPI_Init+0x4e>
 44c:	6d 98       	cbi	0x0d, 5	; 13
 44e:	01 c0       	rjmp	.+2      	; 0x452 <SPI_Init+0x4e>
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	95 81       	ldd	r25, Z+5	; 0x05
 454:	99 23       	and	r25, r25
 456:	19 f0       	breq	.+6      	; 0x45e <SPI_Init+0x5a>
 458:	91 30       	cpi	r25, 0x01	; 1
 45a:	19 f0       	breq	.+6      	; 0x462 <SPI_Init+0x5e>
 45c:	04 c0       	rjmp	.+8      	; 0x466 <SPI_Init+0x62>
 45e:	70 98       	cbi	0x0e, 0	; 14
 460:	03 c0       	rjmp	.+6      	; 0x468 <SPI_Init+0x64>
 462:	70 9a       	sbi	0x0e, 0	; 14
 464:	01 c0       	rjmp	.+2      	; 0x468 <SPI_Init+0x64>
 466:	80 e0       	ldi	r24, 0x00	; 0
 468:	23 81       	ldd	r18, Z+3	; 0x03
 46a:	92 2f       	mov	r25, r18
 46c:	9b 7f       	andi	r25, 0xFB	; 251
 46e:	11 f0       	breq	.+4      	; 0x474 <SPI_Init+0x70>
 470:	98 30       	cpi	r25, 0x08	; 8
 472:	51 f4       	brne	.+20     	; 0x488 <SPI_Init+0x84>
 474:	94 81       	ldd	r25, Z+4	; 0x04
 476:	94 30       	cpi	r25, 0x04	; 4
 478:	48 f4       	brcc	.+18     	; 0x48c <SPI_Init+0x88>
 47a:	3d b1       	in	r19, 0x0d	; 13
 47c:	92 2b       	or	r25, r18
 47e:	93 2b       	or	r25, r19
 480:	9d b9       	out	0x0d, r25	; 13
 482:	05 c0       	rjmp	.+10     	; 0x48e <SPI_Init+0x8a>
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	03 c0       	rjmp	.+6      	; 0x48e <SPI_Init+0x8a>
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	01 c0       	rjmp	.+2      	; 0x48e <SPI_Init+0x8a>
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	26 81       	ldd	r18, Z+6	; 0x06
 490:	37 81       	ldd	r19, Z+7	; 0x07
 492:	30 93 7c 00 	sts	0x007C, r19	; 0x80007c <SPI_CBK+0x1>
 496:	20 93 7b 00 	sts	0x007B, r18	; 0x80007b <SPI_CBK>
 49a:	6e 9a       	sbi	0x0d, 6	; 13
 49c:	08 95       	ret

0000049e <SPI_SendChar>:
 49e:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <u8_FirstTimeFlag.1625>
 4a2:	99 23       	and	r25, r25
 4a4:	79 f0       	breq	.+30     	; 0x4c4 <SPI_SendChar+0x26>
 4a6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <u8_FirstTimeFlag.1625>
 4aa:	6f 9b       	sbis	0x0d, 7	; 13
 4ac:	07 c0       	rjmp	.+14     	; 0x4bc <SPI_SendChar+0x1e>
 4ae:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <x.1626>
 4b2:	9f 5f       	subi	r25, 0xFF	; 255
 4b4:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <x.1626>
 4b8:	8f b9       	out	0x0f, r24	; 15
 4ba:	16 c0       	rjmp	.+44     	; 0x4e8 <SPI_SendChar+0x4a>
 4bc:	8f b9       	out	0x0f, r24	; 15
 4be:	77 9b       	sbis	0x0e, 7	; 14
 4c0:	fe cf       	rjmp	.-4      	; 0x4be <SPI_SendChar+0x20>
 4c2:	12 c0       	rjmp	.+36     	; 0x4e8 <SPI_SendChar+0x4a>
 4c4:	6f 9b       	sbis	0x0d, 7	; 13
 4c6:	0d c0       	rjmp	.+26     	; 0x4e2 <SPI_SendChar+0x44>
 4c8:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <gu8_SPI_Flag>
 4cc:	99 23       	and	r25, r25
 4ce:	61 f0       	breq	.+24     	; 0x4e8 <SPI_SendChar+0x4a>
 4d0:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <gu8_SPI_Flag>
 4d4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <x.1626>
 4d8:	9f 5f       	subi	r25, 0xFF	; 255
 4da:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <x.1626>
 4de:	8f b9       	out	0x0f, r24	; 15
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <SPI_SendChar+0x4a>
 4e2:	8f b9       	out	0x0f, r24	; 15
 4e4:	77 9b       	sbis	0x0e, 7	; 14
 4e6:	fe cf       	rjmp	.-4      	; 0x4e4 <SPI_SendChar+0x46>
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	08 95       	ret

000004ec <__vector_12>:

InterruptServiceRoutine(SPI_STC_vect)
{
 4ec:	1f 92       	push	r1
 4ee:	0f 92       	push	r0
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	0f 92       	push	r0
 4f4:	11 24       	eor	r1, r1
 4f6:	2f 93       	push	r18
 4f8:	3f 93       	push	r19
 4fa:	4f 93       	push	r20
 4fc:	5f 93       	push	r21
 4fe:	6f 93       	push	r22
 500:	7f 93       	push	r23
 502:	8f 93       	push	r24
 504:	9f 93       	push	r25
 506:	af 93       	push	r26
 508:	bf 93       	push	r27
 50a:	ef 93       	push	r30
 50c:	ff 93       	push	r31
	gu8_SPI_Flag = TRUE;
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <gu8_SPI_Flag>
	
	if (SPI_CBK != NULL)
 514:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <SPI_CBK>
 518:	f0 91 7c 00 	lds	r31, 0x007C	; 0x80007c <SPI_CBK+0x1>
 51c:	30 97       	sbiw	r30, 0x00	; 0
 51e:	09 f0       	breq	.+2      	; 0x522 <__vector_12+0x36>
		SPI_CBK();
 520:	09 95       	icall
 522:	ff 91       	pop	r31
 524:	ef 91       	pop	r30
 526:	bf 91       	pop	r27
 528:	af 91       	pop	r26
 52a:	9f 91       	pop	r25
 52c:	8f 91       	pop	r24
 52e:	7f 91       	pop	r23
 530:	6f 91       	pop	r22
 532:	5f 91       	pop	r21
 534:	4f 91       	pop	r20
 536:	3f 91       	pop	r19
 538:	2f 91       	pop	r18
 53a:	0f 90       	pop	r0
 53c:	0f be       	out	0x3f, r0	; 63
 53e:	0f 90       	pop	r0
 540:	1f 90       	pop	r1
 542:	18 95       	reti

00000544 <USART_Init>:
	
	if (pu8_Str == NULL_CHAR)
		u8_FunctionStatus = E_NOK;
		
	return u8_FunctionStatus;
}
 544:	fc 01       	movw	r30, r24
 546:	9b b1       	in	r25, 0x0b	; 11
 548:	80 81       	ld	r24, Z
 54a:	89 2b       	or	r24, r25
 54c:	8b b9       	out	0x0b, r24	; 11
 54e:	91 81       	ldd	r25, Z+1	; 0x01
 550:	82 81       	ldd	r24, Z+2	; 0x02
 552:	89 2b       	or	r24, r25
 554:	93 81       	ldd	r25, Z+3	; 0x03
 556:	89 2b       	or	r24, r25
 558:	94 81       	ldd	r25, Z+4	; 0x04
 55a:	89 2b       	or	r24, r25
 55c:	95 81       	ldd	r25, Z+5	; 0x05
 55e:	89 2b       	or	r24, r25
 560:	8a b9       	out	0x0a, r24	; 10
 562:	90 b5       	in	r25, 0x20	; 32
 564:	86 81       	ldd	r24, Z+6	; 0x06
 566:	89 2b       	or	r24, r25
 568:	80 68       	ori	r24, 0x80	; 128
 56a:	97 81       	ldd	r25, Z+7	; 0x07
 56c:	89 2b       	or	r24, r25
 56e:	91 85       	ldd	r25, Z+9	; 0x09
 570:	89 2b       	or	r24, r25
 572:	80 bd       	out	0x20, r24	; 32
 574:	a1 e8       	ldi	r26, 0x81	; 129
 576:	b0 e0       	ldi	r27, 0x00	; 0
 578:	82 85       	ldd	r24, Z+10	; 0x0a
 57a:	93 85       	ldd	r25, Z+11	; 0x0b
 57c:	11 96       	adiw	r26, 0x01	; 1
 57e:	9c 93       	st	X, r25
 580:	8e 93       	st	-X, r24
 582:	84 85       	ldd	r24, Z+12	; 0x0c
 584:	95 85       	ldd	r25, Z+13	; 0x0d
 586:	13 96       	adiw	r26, 0x03	; 3
 588:	9c 93       	st	X, r25
 58a:	8e 93       	st	-X, r24
 58c:	12 97       	sbiw	r26, 0x02	; 2
 58e:	86 85       	ldd	r24, Z+14	; 0x0e
 590:	97 85       	ldd	r25, Z+15	; 0x0f
 592:	15 96       	adiw	r26, 0x05	; 5
 594:	9c 93       	st	X, r25
 596:	8e 93       	st	-X, r24
 598:	14 97       	sbiw	r26, 0x04	; 4
 59a:	87 e6       	ldi	r24, 0x67	; 103
 59c:	89 b9       	out	0x09, r24	; 9
 59e:	10 bc       	out	0x20, r1	; 32
 5a0:	81 e0       	ldi	r24, 0x01	; 1
 5a2:	ef 2b       	or	r30, r31
 5a4:	09 f4       	brne	.+2      	; 0x5a8 <USART_Init+0x64>
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	08 95       	ret

000005aa <USART_SendChar>:
 5aa:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <u8_1stTimeFlag.1624>
 5ae:	99 23       	and	r25, r25
 5b0:	61 f0       	breq	.+24     	; 0x5ca <USART_SendChar+0x20>
 5b2:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <u8_1stTimeFlag.1624>
 5b6:	56 9b       	sbis	0x0a, 6	; 10
 5b8:	04 c0       	rjmp	.+8      	; 0x5c2 <USART_SendChar+0x18>
 5ba:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <gu8_UDRE_flag>
 5be:	8c b9       	out	0x0c, r24	; 12
 5c0:	17 c0       	rjmp	.+46     	; 0x5f0 <USART_SendChar+0x46>
 5c2:	5d 9b       	sbis	0x0b, 5	; 11
 5c4:	fe cf       	rjmp	.-4      	; 0x5c2 <USART_SendChar+0x18>
 5c6:	8c b9       	out	0x0c, r24	; 12
 5c8:	13 c0       	rjmp	.+38     	; 0x5f0 <USART_SendChar+0x46>
 5ca:	56 9b       	sbis	0x0a, 6	; 10
 5cc:	0e c0       	rjmp	.+28     	; 0x5ea <USART_SendChar+0x40>
 5ce:	92 e0       	ldi	r25, 0x02	; 2
 5d0:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <x.1625>
 5d4:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <gu8_TXC_flag>
 5d8:	99 23       	and	r25, r25
 5da:	51 f0       	breq	.+20     	; 0x5f0 <USART_SendChar+0x46>
 5dc:	93 e0       	ldi	r25, 0x03	; 3
 5de:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <x.1625>
 5e2:	8c b9       	out	0x0c, r24	; 12
 5e4:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <gu8_TXC_flag>
 5e8:	03 c0       	rjmp	.+6      	; 0x5f0 <USART_SendChar+0x46>
 5ea:	5d 9b       	sbis	0x0b, 5	; 11
 5ec:	fe cf       	rjmp	.-4      	; 0x5ea <USART_SendChar+0x40>
 5ee:	8c b9       	out	0x0c, r24	; 12
 5f0:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <x.1625>
 5f4:	82 bf       	out	0x32, r24	; 50
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	08 95       	ret

000005fa <USART_ReceiveChar>:
 5fa:	00 97       	sbiw	r24, 0x00	; 0
 5fc:	71 f0       	breq	.+28     	; 0x61a <USART_ReceiveChar+0x20>
 5fe:	57 9b       	sbis	0x0a, 7	; 10
 600:	05 c0       	rjmp	.+10     	; 0x60c <USART_ReceiveChar+0x12>
 602:	2c b1       	in	r18, 0x0c	; 12
 604:	fc 01       	movw	r30, r24
 606:	20 83       	st	Z, r18
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	08 95       	ret
 60c:	5f 9b       	sbis	0x0b, 7	; 11
 60e:	fe cf       	rjmp	.-4      	; 0x60c <USART_ReceiveChar+0x12>
 610:	2c b1       	in	r18, 0x0c	; 12
 612:	fc 01       	movw	r30, r24
 614:	20 83       	st	Z, r18
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	08 95       	ret
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	08 95       	ret

0000061e <__vector_13>:

InterruptServiceRoutine(USART_RXC_vect)
{
 61e:	1f 92       	push	r1
 620:	0f 92       	push	r0
 622:	0f b6       	in	r0, 0x3f	; 63
 624:	0f 92       	push	r0
 626:	11 24       	eor	r1, r1
 628:	2f 93       	push	r18
 62a:	3f 93       	push	r19
 62c:	4f 93       	push	r20
 62e:	5f 93       	push	r21
 630:	6f 93       	push	r22
 632:	7f 93       	push	r23
 634:	8f 93       	push	r24
 636:	9f 93       	push	r25
 638:	af 93       	push	r26
 63a:	bf 93       	push	r27
 63c:	ef 93       	push	r30
 63e:	ff 93       	push	r31
	gu8_RXC_flag = TRUE;
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <gu8_RXC_flag>
	
	if (USART_CBK[USART_RXC_CBK_INDEX]!=NULL)
 646:	e0 91 85 00 	lds	r30, 0x0085	; 0x800085 <USART_CBK+0x4>
 64a:	f0 91 86 00 	lds	r31, 0x0086	; 0x800086 <USART_CBK+0x5>
 64e:	30 97       	sbiw	r30, 0x00	; 0
 650:	09 f0       	breq	.+2      	; 0x654 <__vector_13+0x36>
	{
		USART_CBK[USART_RXC_CBK_INDEX]();
 652:	09 95       	icall
	}
	
}
 654:	ff 91       	pop	r31
 656:	ef 91       	pop	r30
 658:	bf 91       	pop	r27
 65a:	af 91       	pop	r26
 65c:	9f 91       	pop	r25
 65e:	8f 91       	pop	r24
 660:	7f 91       	pop	r23
 662:	6f 91       	pop	r22
 664:	5f 91       	pop	r21
 666:	4f 91       	pop	r20
 668:	3f 91       	pop	r19
 66a:	2f 91       	pop	r18
 66c:	0f 90       	pop	r0
 66e:	0f be       	out	0x3f, r0	; 63
 670:	0f 90       	pop	r0
 672:	1f 90       	pop	r1
 674:	18 95       	reti

00000676 <__vector_14>:
InterruptServiceRoutine(USART_UDRE_vect)
{
 676:	1f 92       	push	r1
 678:	0f 92       	push	r0
 67a:	0f b6       	in	r0, 0x3f	; 63
 67c:	0f 92       	push	r0
 67e:	11 24       	eor	r1, r1
 680:	2f 93       	push	r18
 682:	3f 93       	push	r19
 684:	4f 93       	push	r20
 686:	5f 93       	push	r21
 688:	6f 93       	push	r22
 68a:	7f 93       	push	r23
 68c:	8f 93       	push	r24
 68e:	9f 93       	push	r25
 690:	af 93       	push	r26
 692:	bf 93       	push	r27
 694:	ef 93       	push	r30
 696:	ff 93       	push	r31
	gu8_UDRE_flag = TRUE;
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <gu8_UDRE_flag>
	
	/*PORTA_DIR = 0xff;
	PORTA_DATA = 0xff;*/
	
	if(USART_CBK[USART_UDRE_CBK_INDEX]!=NULL)
 69e:	e0 91 81 00 	lds	r30, 0x0081	; 0x800081 <USART_CBK>
 6a2:	f0 91 82 00 	lds	r31, 0x0082	; 0x800082 <USART_CBK+0x1>
 6a6:	30 97       	sbiw	r30, 0x00	; 0
 6a8:	09 f0       	breq	.+2      	; 0x6ac <__vector_14+0x36>
	{
		USART_CBK[USART_UDRE_CBK_INDEX]();
 6aa:	09 95       	icall
	}
}
 6ac:	ff 91       	pop	r31
 6ae:	ef 91       	pop	r30
 6b0:	bf 91       	pop	r27
 6b2:	af 91       	pop	r26
 6b4:	9f 91       	pop	r25
 6b6:	8f 91       	pop	r24
 6b8:	7f 91       	pop	r23
 6ba:	6f 91       	pop	r22
 6bc:	5f 91       	pop	r21
 6be:	4f 91       	pop	r20
 6c0:	3f 91       	pop	r19
 6c2:	2f 91       	pop	r18
 6c4:	0f 90       	pop	r0
 6c6:	0f be       	out	0x3f, r0	; 63
 6c8:	0f 90       	pop	r0
 6ca:	1f 90       	pop	r1
 6cc:	18 95       	reti

000006ce <__vector_15>:
InterruptServiceRoutine(USART_TXC_vect)
{	gu8_TXC_flag = TRUE;
 6ce:	1f 92       	push	r1
 6d0:	0f 92       	push	r0
 6d2:	0f b6       	in	r0, 0x3f	; 63
 6d4:	0f 92       	push	r0
 6d6:	11 24       	eor	r1, r1
 6d8:	2f 93       	push	r18
 6da:	3f 93       	push	r19
 6dc:	4f 93       	push	r20
 6de:	5f 93       	push	r21
 6e0:	6f 93       	push	r22
 6e2:	7f 93       	push	r23
 6e4:	8f 93       	push	r24
 6e6:	9f 93       	push	r25
 6e8:	af 93       	push	r26
 6ea:	bf 93       	push	r27
 6ec:	ef 93       	push	r30
 6ee:	ff 93       	push	r31
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <gu8_TXC_flag>
	
	PORTA_DIR = 0xff;
 6f6:	8f ef       	ldi	r24, 0xFF	; 255
 6f8:	8a bb       	out	0x1a, r24	; 26
	PORTA_DATA = 0xff;
 6fa:	8b bb       	out	0x1b, r24	; 27
	if(USART_CBK[USART_TXC_CBK_INDEX]!=NULL)
 6fc:	e0 91 83 00 	lds	r30, 0x0083	; 0x800083 <USART_CBK+0x2>
 700:	f0 91 84 00 	lds	r31, 0x0084	; 0x800084 <USART_CBK+0x3>
 704:	30 97       	sbiw	r30, 0x00	; 0
 706:	09 f0       	breq	.+2      	; 0x70a <__vector_15+0x3c>
	{
		USART_CBK[USART_TXC_CBK_INDEX]();
 708:	09 95       	icall
	}
 70a:	ff 91       	pop	r31
 70c:	ef 91       	pop	r30
 70e:	bf 91       	pop	r27
 710:	af 91       	pop	r26
 712:	9f 91       	pop	r25
 714:	8f 91       	pop	r24
 716:	7f 91       	pop	r23
 718:	6f 91       	pop	r22
 71a:	5f 91       	pop	r21
 71c:	4f 91       	pop	r20
 71e:	3f 91       	pop	r19
 720:	2f 91       	pop	r18
 722:	0f 90       	pop	r0
 724:	0f be       	out	0x3f, r0	; 63
 726:	0f 90       	pop	r0
 728:	1f 90       	pop	r1
 72a:	18 95       	reti

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
